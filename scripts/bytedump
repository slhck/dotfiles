#!/usr/bin/env python3
# Output a file's bytes as a delimiter-separated list (decimal or hex)
import argparse
from pathlib import Path
from sys import stdout


def to_hex(n):
    return f"{n:02X}"


def main():
    parser = argparse.ArgumentParser(
        description="Get a delimiter-separated list of bytes from a file"
    )
    parser.add_argument("file", type=Path, help="The file to dump")
    parser.add_argument("--delimiter", type=str, default=",", help="Delimiter")
    parser.add_argument("--hex", action="store_true", help="Output as hex")
    args = parser.parse_args()

    if args.hex:
        stringify = to_hex
    else:
        stringify = str

    with open(args.file, "rb") as file:
        has_written_first = False

        while True:
            chunk = file.read(1024)
            if not chunk:
                break

            for byte in chunk:
                if has_written_first:
                    stdout.write(args.delimiter)
                else:
                    has_written_first = True
                stdout.write(stringify(byte))


if __name__ == "__main__":
    main()
